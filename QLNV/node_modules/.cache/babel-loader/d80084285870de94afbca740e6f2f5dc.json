{"ast":null,"code":"import _slicedToArray from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\src\\\\app\\\\views\\\\UpdateHappenings\\\\index.jsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EyeFilled, HomeFilled, InfoCircleFilled } from '@ant-design/icons';\nimport { Breadcrumb, Table, Tooltip } from 'antd';\nimport { ListStatus } from '../GeneralSettings/ListStatus';\nimport AdditionalRequestModal from './AdditionalRequestModal';\nimport ModalUpdateHappenings from './ModalUpdateHappenings';\nimport { getListStaff, getPageCreateStaff, getTotalStaff } from 'app/redux/actions/CreateStaffAction';\nimport { defaultPageSize, formatDate, listGender, pageSizeOptions, rejectedToEndStatus, replenishmentStatus } from '../GeneralSettings/constant';\n\nvar UpdateHappenings = function UpdateHappenings() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeInfo = _useState2[0],\n      setEmployeeInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldOpenModalUpdateHappenings = _useState4[0],\n      setShouldOpenModalUpdateHappenings = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shouldOpenAdditionalRequestModal = _useState6[0],\n      setShouldOpenAdditionalRequestModal = _useState6[1];\n\n  var dispatch = useDispatch();\n  var StaffList = useSelector(function (state) {\n    return state.createStaff.StaffList;\n  });\n  var total = useSelector(function (state) {\n    return state.createStaff.total;\n  });\n  var reRender = useSelector(function (state) {\n    return state.createStaff.reRender;\n  });\n  var page = useSelector(function (state) {\n    return state.createStaff.page;\n  });\n  var pageSize = useSelector(function (state) {\n    return state.createStaff.pageSize;\n  });\n  var statuses = [5, 8, 9, 11];\n  useEffect(function () {\n    dispatch(getListStaff(page, pageSize, statuses));\n  }, [reRender, page, pageSize]);\n  useEffect(function () {\n    dispatch(getTotalStaff(statuses));\n  }, []);\n\n  var handlePaginationChange = function handlePaginationChange(page, pageSize) {\n    dispatch(getPageCreateStaff(page, pageSize));\n  };\n\n  var openUpdateStatus = function openUpdateStatus() {\n    setShouldOpenModalUpdateHappenings(!shouldOpenModalUpdateHappenings);\n  };\n\n  var openAdditionalRequestModal = function openAdditionalRequestModal() {\n    setShouldOpenAdditionalRequestModal(!shouldOpenAdditionalRequestModal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30 updateHappenings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    className: \"breadcrumb-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HomeFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    href: \"/conclude/manage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Qu\\u1EA3n l\\xFD nh\\xE2n vi\\xEAn\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Qu\\u1EA3n l\\xFD\")), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    columns: [{\n      key: 'action',\n      title: 'Hành động',\n      width: '10%',\n      align: 'center',\n      render: function render(record) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"list_icon\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          placement: \"bottom\",\n          title: \"xem th\\xF4ng tin\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(EyeFilled, {\n          onClick: function onClick() {\n            setEmployeeInfo(record);\n            openUpdateStatus();\n          },\n          className: \"icon-antd icon-eye\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }\n        })), ((record === null || record === void 0 ? void 0 : record.status) === replenishmentStatus || (record === null || record === void 0 ? void 0 : record.status) === rejectedToEndStatus) && /*#__PURE__*/React.createElement(Tooltip, {\n          placement: \"bottom\",\n          title: \"b\\u1ED5 sung th\\xF4ng tin\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 124\n          }\n        }, /*#__PURE__*/React.createElement(InfoCircleFilled, {\n          onClick: function onClick() {\n            openAdditionalRequestModal();\n            setEmployeeInfo(record);\n          },\n          className: \"icon-info\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 41\n          }\n        })));\n      }\n    }, {\n      key: 'code',\n      title: 'Mã nhân viên',\n      width: '12%',\n      render: function render(record) {\n        return (record === null || record === void 0 ? void 0 : record.code) ? record === null || record === void 0 ? void 0 : record.code : null;\n      }\n    }, {\n      key: 'fullName',\n      title: 'Họ và tên',\n      width: '15%',\n      render: function render(record) {\n        return (record === null || record === void 0 ? void 0 : record.fullName) ? record === null || record === void 0 ? void 0 : record.fullName : null;\n      }\n    }, {\n      key: 'dateOfBirth',\n      title: 'Ngày sinh',\n      width: '10%',\n      render: function render(record) {\n        return (record === null || record === void 0 ? void 0 : record.dateOfBirth) ? formatDate(record === null || record === void 0 ? void 0 : record.dateOfBirth) : null;\n      }\n    }, {\n      key: 'gender',\n      title: 'Giới tính',\n      width: '10%',\n      render: function render(record) {\n        var _listGender$record$ge;\n\n        return (_listGender$record$ge = listGender[record === null || record === void 0 ? void 0 : record.gender]) === null || _listGender$record$ge === void 0 ? void 0 : _listGender$record$ge.name;\n      }\n    }, {\n      key: 'address',\n      title: 'Địa chỉ',\n      width: '25%',\n      render: function render(record) {\n        return (record === null || record === void 0 ? void 0 : record.address) ? record === null || record === void 0 ? void 0 : record.address : null;\n      }\n    }, {\n      key: 'status',\n      title: 'Trạng thái',\n      render: function render(record) {\n        return /*#__PURE__*/React.createElement(ListStatus, {\n          record: record,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 45\n          }\n        });\n      }\n    }],\n    dataSource: StaffList,\n    pagination: {\n      current: page,\n      pageSize: pageSize,\n      total: total,\n      onChange: handlePaginationChange,\n      showSizeChanger: true,\n      defaultPageSize: defaultPageSize,\n      pageSizeOptions: pageSizeOptions\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), shouldOpenAdditionalRequestModal && /*#__PURE__*/React.createElement(AdditionalRequestModal, {\n    open: shouldOpenAdditionalRequestModal,\n    openAdditionalRequestModal: openAdditionalRequestModal,\n    employeeInfo: employeeInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), shouldOpenModalUpdateHappenings && /*#__PURE__*/React.createElement(ModalUpdateHappenings, {\n    open: shouldOpenModalUpdateHappenings,\n    employeeInfo: employeeInfo,\n    openUpdateStatus: openUpdateStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default UpdateHappenings;","map":{"version":3,"sources":["D:/DATA/QL_NV/QLNV/src/app/views/UpdateHappenings/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","EyeFilled","HomeFilled","InfoCircleFilled","Breadcrumb","Table","Tooltip","ListStatus","AdditionalRequestModal","ModalUpdateHappenings","getListStaff","getPageCreateStaff","getTotalStaff","defaultPageSize","formatDate","listGender","pageSizeOptions","rejectedToEndStatus","replenishmentStatus","UpdateHappenings","employeeInfo","setEmployeeInfo","shouldOpenModalUpdateHappenings","setShouldOpenModalUpdateHappenings","shouldOpenAdditionalRequestModal","setShouldOpenAdditionalRequestModal","dispatch","StaffList","state","createStaff","total","reRender","page","pageSize","statuses","handlePaginationChange","openUpdateStatus","openAdditionalRequestModal","key","title","width","align","render","record","status","code","fullName","dateOfBirth","gender","name","address","current","onChange","showSizeChanger"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,gBAAhC,QAAwD,mBAAxD;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,OAA5B,QAA2C,MAA3C;AAEA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,aAA3C,QAAgE,qCAAhE;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,UAAtC,EAAkDC,eAAlD,EAAmEC,mBAAnE,EAAwFC,mBAAxF,QAAmH,6BAAnH;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACarB,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACpBsB,YADoB;AAAA,MACNC,eADM;;AAAA,mBAEmDvB,QAAQ,CAAC,KAAD,CAF3D;AAAA;AAAA,MAEpBwB,+BAFoB;AAAA,MAEaC,kCAFb;;AAAA,mBAGqDzB,QAAQ,CAAC,KAAD,CAH7D;AAAA;AAAA,MAGpB0B,gCAHoB;AAAA,MAGcC,mCAHd;;AAK3B,MAAMC,QAAQ,GAAG3B,WAAW,EAA5B;AACA,MAAM4B,SAAS,GAAG3B,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBF,SAA7B;AAAA,GAAD,CAA7B;AACA,MAAMG,KAAK,GAAG9B,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBC,KAA7B;AAAA,GAAD,CAAzB;AACA,MAAMC,QAAQ,GAAG/B,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBE,QAA7B;AAAA,GAAD,CAA5B;AACA,MAAMC,IAAI,GAAGhC,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBG,IAA7B;AAAA,GAAD,CAAxB;AACA,MAAMC,QAAQ,GAAGjC,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBI,QAA7B;AAAA,GAAD,CAA5B;AACA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAjB;AAEArC,EAAAA,SAAS,CAAC,YAAM;AACZ6B,IAAAA,QAAQ,CAAChB,YAAY,CAACsB,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,CAAb,CAAR;AACH,GAFQ,EAEN,CAACH,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,CAFM,CAAT;AAIApC,EAAAA,SAAS,CAAC,YAAM;AACZ6B,IAAAA,QAAQ,CAACd,aAAa,CAACsB,QAAD,CAAd,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACH,IAAD,EAAOC,QAAP,EAAoB;AAC/CP,IAAAA,QAAQ,CAACf,kBAAkB,CAACqB,IAAD,EAAOC,QAAP,CAAnB,CAAR;AACH,GAFD;;AAIA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3Bb,IAAAA,kCAAkC,CAAC,CAACD,+BAAF,CAAlC;AACH,GAFD;;AAIA,MAAMe,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACrCZ,IAAAA,mCAAmC,CAAC,CAACD,gCAAF,CAAnC;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,IAAI,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,IAAI,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CAJJ,eAOI,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,CADJ,eAWI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAE,CACL;AACIc,MAAAA,GAAG,EAAE,QADT;AAEIC,MAAAA,KAAK,EAAE,WAFX;AAGIC,MAAAA,KAAK,EAAE,KAHX;AAIIC,MAAAA,KAAK,EAAE,QAJX;AAKIC,MAAAA,MAAM,EAAE,gBAACC,MAAD,EAAY;AAEhB,4BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AACI,UAAA,OAAO,EAAE,mBAAM;AACXtB,YAAAA,eAAe,CAACsB,MAAD,CAAf;AACAP,YAAAA,gBAAgB;AACnB,WAJL;AAKI,UAAA,SAAS,EAAC,oBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,EAWK,CAAC,CAAAO,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,MAAR,MAAmB1B,mBAAnB,IAA0C,CAAAyB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,MAAR,MAAmB3B,mBAA9D,kBAAsF,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAC,2BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACnF,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,mBAAM;AAC7BoB,YAAAA,0BAA0B;AAC1BhB,YAAAA,eAAe,CAACsB,MAAD,CAAf;AAEH,WAJD;AAIG,UAAA,SAAS,EAAC,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmF,CAX3F,CADJ;AAsBH;AA7BL,KADK,EAgCL;AACIL,MAAAA,GAAG,EAAE,MADT;AACiBC,MAAAA,KAAK,EAAE,cADxB;AACwCC,MAAAA,KAAK,EAAE,KAD/C;AAEIE,MAAAA,MAAM,EAAE,gBAACC,MAAD;AAAA,eAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,IAAR,IAAeF,MAAf,aAAeA,MAAf,uBAAeA,MAAM,CAAEE,IAAvB,GAA8B,IAA1C;AAAA;AAFZ,KAhCK,EAoCL;AACIP,MAAAA,GAAG,EAAE,UADT;AACqBC,MAAAA,KAAK,EAAE,WAD5B;AACyCC,MAAAA,KAAK,EAAE,KADhD;AAEIE,MAAAA,MAAM,EAAE,gBAACC,MAAD;AAAA,eAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEG,QAAR,IAAmBH,MAAnB,aAAmBA,MAAnB,uBAAmBA,MAAM,CAAEG,QAA3B,GAAsC,IAAlD;AAAA;AAFZ,KApCK,EAwCL;AACIR,MAAAA,GAAG,EAAE,aADT;AACwBC,MAAAA,KAAK,EAAE,WAD/B;AAC4CC,MAAAA,KAAK,EAAE,KADnD;AAEIE,MAAAA,MAAM,EAAE,gBAACC,MAAD;AAAA,eAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEI,WAAR,IAAsBjC,UAAU,CAAC6B,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,WAAT,CAAhC,GAAwD,IAApE;AAAA;AAFZ,KAxCK,EA4CL;AACIT,MAAAA,GAAG,EAAE,QADT;AACmBC,MAAAA,KAAK,EAAE,WAD1B;AACuCC,MAAAA,KAAK,EAAE,KAD9C;AAEIE,MAAAA,MAAM,EAAE,gBAACC,MAAD;AAAA;;AAAA,wCAAY5B,UAAU,CAAC4B,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEK,MAAT,CAAtB,0DAAY,sBAA4BC,IAAxC;AAAA;AAFZ,KA5CK,EAgDL;AACIX,MAAAA,GAAG,EAAE,SADT;AACoBC,MAAAA,KAAK,EAAE,SAD3B;AACsCC,MAAAA,KAAK,EAAE,KAD7C;AAEIE,MAAAA,MAAM,EAAE,gBAACC,MAAD;AAAA,eAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,OAAR,IAAkBP,MAAlB,aAAkBA,MAAlB,uBAAkBA,MAAM,CAAEO,OAA1B,GAAoC,IAAhD;AAAA;AAFZ,KAhDK,EAoDL;AACIZ,MAAAA,GAAG,EAAE,QADT;AAEIC,MAAAA,KAAK,EAAE,YAFX;AAGIG,MAAAA,MAAM,EAAE,gBAACC,MAAD;AAAA,4BAAY,oBAAC,UAAD;AAAY,UAAA,MAAM,EAAEA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AAAA;AAHZ,KApDK,CAFb;AA4DI,IAAA,UAAU,EAAEhB,SA5DhB;AA6DI,IAAA,UAAU,EAAE;AACRwB,MAAAA,OAAO,EAAEnB,IADD;AAERC,MAAAA,QAAQ,EAAEA,QAFF;AAGRH,MAAAA,KAAK,EAAEA,KAHC;AAIRsB,MAAAA,QAAQ,EAAEjB,sBAJF;AAKRkB,MAAAA,eAAe,EAAE,IALT;AAMRxC,MAAAA,eAAe,EAAEA,eANT;AAORG,MAAAA,eAAe,EAAEA;AAPT,KA7DhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAmFKQ,gCAAgC,iBAC7B,oBAAC,sBAAD;AACI,IAAA,IAAI,EAAEA,gCADV;AAEI,IAAA,0BAA0B,EAAEa,0BAFhC;AAGI,IAAA,YAAY,EAAEjB,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApFR,EA2FKE,+BAA+B,iBAC5B,oBAAC,qBAAD;AACI,IAAA,IAAI,EAAEA,+BADV;AAEI,IAAA,YAAY,EAAEF,YAFlB;AAGI,IAAA,gBAAgB,EAAEgB,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5FR,CADJ;AAqGH,CAtID;;AAwIA,eAAejB,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EyeFilled, HomeFilled, InfoCircleFilled } from '@ant-design/icons';\r\nimport { Breadcrumb, Table, Tooltip } from 'antd';\r\n\r\nimport { ListStatus } from '../GeneralSettings/ListStatus';\r\nimport AdditionalRequestModal from './AdditionalRequestModal';\r\nimport ModalUpdateHappenings from './ModalUpdateHappenings';\r\nimport { getListStaff, getPageCreateStaff, getTotalStaff } from 'app/redux/actions/CreateStaffAction';\r\nimport { defaultPageSize, formatDate, listGender, pageSizeOptions, rejectedToEndStatus, replenishmentStatus } from '../GeneralSettings/constant';\r\n\r\nconst UpdateHappenings = () => {\r\n    const [employeeInfo, setEmployeeInfo] = useState({});\r\n    const [shouldOpenModalUpdateHappenings, setShouldOpenModalUpdateHappenings] = useState(false);\r\n    const [shouldOpenAdditionalRequestModal, setShouldOpenAdditionalRequestModal] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n    const StaffList = useSelector((state) => state.createStaff.StaffList)\r\n    const total = useSelector((state) => state.createStaff.total)\r\n    const reRender = useSelector((state) => state.createStaff.reRender);\r\n    const page = useSelector((state) => state.createStaff.page);\r\n    const pageSize = useSelector((state) => state.createStaff.pageSize);\r\n    const statuses = [5, 8, 9, 11]\r\n\r\n    useEffect(() => {\r\n        dispatch(getListStaff(page, pageSize, statuses))\r\n    }, [reRender, page, pageSize])\r\n\r\n    useEffect(() => {\r\n        dispatch(getTotalStaff(statuses))\r\n    }, [])\r\n\r\n    const handlePaginationChange = (page, pageSize) => {\r\n        dispatch(getPageCreateStaff(page, pageSize))\r\n    };\r\n\r\n    const openUpdateStatus = () => {\r\n        setShouldOpenModalUpdateHappenings(!shouldOpenModalUpdateHappenings);\r\n    };\r\n\r\n    const openAdditionalRequestModal = () => {\r\n        setShouldOpenAdditionalRequestModal(!shouldOpenAdditionalRequestModal);\r\n    };\r\n\r\n    return (\r\n        <div className=\"m-sm-30 updateHappenings\">\r\n            <Breadcrumb className='breadcrumb-body'>\r\n                <Breadcrumb.Item href=\"/\">\r\n                    <HomeFilled />\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item href=\"/conclude/manage\">\r\n                    <span>Quản lý nhân viên</span>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>Quản lý</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <Table\r\n                size='small'\r\n                columns={[\r\n                    {\r\n                        key: 'action',\r\n                        title: 'Hành động',\r\n                        width: '10%',\r\n                        align: 'center',\r\n                        render: (record) => {\r\n\r\n                            return (\r\n                                <div className='list_icon' >\r\n                                    <Tooltip placement=\"bottom\" title=\"xem thông tin\">\r\n                                        <EyeFilled\r\n                                            onClick={() => {\r\n                                                setEmployeeInfo(record);\r\n                                                openUpdateStatus();\r\n                                            }}\r\n                                            className='icon-antd icon-eye'\r\n                                        />\r\n                                    </Tooltip>\r\n\r\n                                    {(record?.status === replenishmentStatus || record?.status === rejectedToEndStatus) && <Tooltip placement=\"bottom\" title=\"bổ sung thông tin\">\r\n                                        <InfoCircleFilled onClick={() => {\r\n                                            openAdditionalRequestModal()\r\n                                            setEmployeeInfo(record);\r\n\r\n                                        }} className=\"icon-info\" />\r\n                                    </Tooltip>}\r\n                                </div>\r\n                            );\r\n\r\n                        },\r\n                    },\r\n                    {\r\n                        key: 'code', title: 'Mã nhân viên', width: '12%',\r\n                        render: (record) => record?.code ? record?.code : null\r\n                    },\r\n                    {\r\n                        key: 'fullName', title: 'Họ và tên', width: '15%',\r\n                        render: (record) => record?.fullName ? record?.fullName : null\r\n                    },\r\n                    {\r\n                        key: 'dateOfBirth', title: 'Ngày sinh', width: '10%',\r\n                        render: (record) => record?.dateOfBirth ? formatDate(record?.dateOfBirth) : null\r\n                    },\r\n                    {\r\n                        key: 'gender', title: 'Giới tính', width: '10%',\r\n                        render: (record) => listGender[record?.gender]?.name\r\n                    },\r\n                    {\r\n                        key: 'address', title: 'Địa chỉ', width: '25%',\r\n                        render: (record) => record?.address ? record?.address : null\r\n                    },\r\n                    {\r\n                        key: 'status',\r\n                        title: 'Trạng thái',\r\n                        render: (record) => <ListStatus record={record} />\r\n                    },\r\n                ]}\r\n                dataSource={StaffList}\r\n                pagination={{\r\n                    current: page,\r\n                    pageSize: pageSize,\r\n                    total: total,\r\n                    onChange: handlePaginationChange,\r\n                    showSizeChanger: true,\r\n                    defaultPageSize: defaultPageSize,\r\n                    pageSizeOptions: pageSizeOptions,\r\n                }}\r\n            />\r\n\r\n            {shouldOpenAdditionalRequestModal && (\r\n                <AdditionalRequestModal\r\n                    open={shouldOpenAdditionalRequestModal}\r\n                    openAdditionalRequestModal={openAdditionalRequestModal}\r\n                    employeeInfo={employeeInfo}\r\n                />\r\n            )}\r\n\r\n            {shouldOpenModalUpdateHappenings && (\r\n                <ModalUpdateHappenings\r\n                    open={shouldOpenModalUpdateHappenings}\r\n                    employeeInfo={employeeInfo}\r\n                    openUpdateStatus={openUpdateStatus}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateHappenings;\r\n"]},"metadata":{},"sourceType":"module"}