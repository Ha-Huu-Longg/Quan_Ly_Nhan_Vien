{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getListPendingSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(getListAcceptedSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(leaderSaga);\n\nimport { call, put, takeLatest } from \"redux-saga/effects\"; // import {} from \"../../views/Pending/PendingService\"\n\nimport { setListPendingAction, setListAccepted2Action, setListAccepted1Action } from \"../actions/LeaderAction\";\nimport { GET_LIST_PENDING, GET_LIST_ACCEPTED } from \"../constants/leaderconstants\";\nimport { getTotalByStatus, getByStatus } from \"../../views/Pending/PendingService\";\n\nfunction getList(arr) {\n  var resTotal, list, page, res;\n  return _regeneratorRuntime.wrap(function getList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getTotalByStatus, arr);\n\n        case 3:\n          resTotal = _context.sent;\n          list = [], page = 0;\n\n        case 5:\n          ++page;\n          _context.next = 8;\n          return call(getByStatus, {\n            arr: arr,\n            page: page\n          });\n\n        case 8:\n          res = _context.sent;\n          list = list.concat(res.data.data);\n\n        case 10:\n          if (list.length < resTotal.data.data) {\n            _context.next = 5;\n            break;\n          }\n\n        case 11:\n          return _context.abrupt(\"return\", list);\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"==> loi: \", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 14]]);\n}\n\nfunction getListPendingSaga() {\n  var list;\n  return _regeneratorRuntime.wrap(function getListPendingSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return getList([3, 8]);\n\n        case 3:\n          list = _context2.sent;\n          _context2.next = 6;\n          return put(setListPendingAction(list));\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"==> loi: \", _context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction getListAcceptedSaga() {\n  var list1, list2;\n  return _regeneratorRuntime.wrap(function getListAcceptedSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return getList([4, 5, 6, 9, 10]);\n\n        case 3:\n          list1 = _context3.sent;\n          _context3.next = 6;\n          return put(setListAccepted1Action(list1));\n\n        case 6:\n          _context3.next = 8;\n          return getList([11]);\n\n        case 8:\n          list2 = _context3.sent;\n          _context3.next = 11;\n          return put(setListAccepted2Action(list2));\n\n        case 11:\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"==> loi: \", _context3.t0);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction leaderSaga() {\n  return _regeneratorRuntime.wrap(function leaderSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_LIST_PENDING, getListPendingSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(GET_LIST_ACCEPTED, getListAcceptedSaga);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default leaderSaga;","map":{"version":3,"sources":["D:/DATA/QL_NV/QLNV/src/app/redux/sagas/LeaderSaga.js"],"names":["getList","getListPendingSaga","getListAcceptedSaga","leaderSaga","call","put","takeLatest","setListPendingAction","setListAccepted2Action","setListAccepted1Action","GET_LIST_PENDING","GET_LIST_ACCEPTED","getTotalByStatus","getByStatus","arr","resTotal","list","page","res","concat","data","length","console","log","list1","list2"],"mappings":";;oDAQUA,O;qDAiBAC,kB;qDASAC,mB;qDAWAC,U;;AA7CV,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC,C,CACA;;AACA,SAASC,oBAAT,EACIC,sBADJ,EAC4BC,sBAD5B,QAEO,yBAFP;AAGA,SAAQC,gBAAR,EAA0BC,iBAA1B,QAAkD,8BAAlD;AACA,SAAQC,gBAAR,EAAyBC,WAAzB,QAA4C,oCAA5C;;AAEA,SAAUb,OAAV,CAAkBc,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEyB,iBAAMV,IAAI,CAACQ,gBAAD,EAAmBE,GAAnB,CAAV;;AAFzB;AAEcC,UAAAA,QAFd;AAGYC,UAAAA,IAHZ,GAGmB,EAHnB,EAGuBC,IAHvB,GAG8B,CAH9B;;AAAA;AAMY,YAAEA,IAAF;AANZ;AAOwB,iBAAMb,IAAI,CAACS,WAAD,EAAc;AAACC,YAAAA,GAAG,EAAHA,GAAD;AAAMG,YAAAA,IAAI,EAAJA;AAAN,WAAd,CAAV;;AAPxB;AAOkBC,UAAAA,GAPlB;AAQYF,UAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAYD,GAAG,CAACE,IAAJ,CAASA,IAArB,CAAP;;AARZ;AAAA,cASiBJ,IAAI,CAACK,MAAL,GAAcN,QAAQ,CAACK,IAAT,CAAcA,IAT7C;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAWeJ,IAXf;;AAAA;AAAA;AAAA;AAaQM,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUtB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMD,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAb;;AAFrB;AAEcgB,UAAAA,IAFd;AAAA;AAGQ,iBAAMX,GAAG,CAACE,oBAAoB,CAACS,IAAD,CAArB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKQM,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUrB,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEsB,iBAAMF,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,CAAD,CAAb;;AAFtB;AAEcwB,UAAAA,KAFd;AAAA;AAGQ,iBAAMnB,GAAG,CAACI,sBAAsB,CAACe,KAAD,CAAvB,CAAT;;AAHR;AAAA;AAIsB,iBAAMxB,OAAO,CAAC,CAAC,EAAD,CAAD,CAAb;;AAJtB;AAIcyB,UAAAA,KAJd;AAAA;AAKQ,iBAAMpB,GAAG,CAACG,sBAAsB,CAACiB,KAAD,CAAvB,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQH,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUpB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,UAAU,CAACI,gBAAD,EAAmBT,kBAAnB,CAAhB;;AADJ;AAAA;AAEI,iBAAMK,UAAU,CAACK,iBAAD,EAAoBT,mBAApB,CAAhB;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,UAAf","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\"\r\n// import {} from \"../../views/Pending/PendingService\"\r\nimport { setListPendingAction,\r\n    setListAccepted2Action, setListAccepted1Action \r\n} from \"../actions/LeaderAction\"\r\nimport {GET_LIST_PENDING, GET_LIST_ACCEPTED} from \"../constants/leaderconstants\"\r\nimport {getTotalByStatus,getByStatus } from \"../../views/Pending/PendingService\"\r\n\r\nfunction* getList(arr) {\r\n    try {\r\n        const resTotal = yield call(getTotalByStatus, arr) \r\n        let list = [], page = 0\r\n\r\n        do {\r\n            ++page\r\n            const res = yield call(getByStatus, {arr, page})\r\n            list = list.concat(res.data.data)\r\n        } while (list.length < resTotal.data.data)\r\n        \r\n        return list\r\n    } catch (error) {\r\n        console.log(\"==> loi: \", error)\r\n    }\r\n}\r\n\r\nfunction* getListPendingSaga() {\r\n    try {\r\n        const list = yield getList([3, 8])\r\n        yield put(setListPendingAction(list))\r\n    } catch (error) {\r\n        console.log(\"==> loi: \", error)\r\n    }\r\n}\r\n\r\nfunction* getListAcceptedSaga() {\r\n    try {\r\n        const list1 = yield getList([4, 5, 6, 9, 10])\r\n        yield put(setListAccepted1Action(list1))\r\n        const list2 = yield getList([11])\r\n        yield put(setListAccepted2Action(list2))\r\n    } catch (error) {\r\n        console.log(\"==> loi: \", error)\r\n    }\r\n}\r\n\r\nfunction* leaderSaga  () {\r\n    yield takeLatest(GET_LIST_PENDING, getListPendingSaga)\r\n    yield takeLatest(GET_LIST_ACCEPTED, getListAcceptedSaga)\r\n}\r\n\r\nexport default leaderSaga\r\n"]},"metadata":{},"sourceType":"module"}