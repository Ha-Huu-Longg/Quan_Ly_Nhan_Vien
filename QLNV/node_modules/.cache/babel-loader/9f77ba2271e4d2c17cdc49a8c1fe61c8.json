{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(deleteStaffSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(updateFormStaffSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createStaffSaga);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { deleteStaff, updateFormStaff } from 'app/views/CreateStaff/CreateStaffService';\nimport { deleteStaffSuccess, updateFormStaffSuccess } from '../actions/CreateStaffAction';\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3,\n  closeOnClick: true\n});\n\nfunction deleteStaffSaga(action) {\n  var data;\n  return _regeneratorRuntime.wrap(function deleteStaffSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(function () {\n            return deleteStaff(action.payload).then(function (res) {\n              if ((res === null || res === void 0 ? void 0 : res.data.code) === 200) {\n                toast.success('Xóa thành công');\n                return res === null || res === void 0 ? void 0 : res.data;\n              } else {\n                toast.error(res === null || res === void 0 ? void 0 : res.data.message);\n              }\n            });\n          });\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return put(deleteStaffSuccess(data));\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('err', _context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction updateFormStaffSaga(action) {\n  var data;\n  return _regeneratorRuntime.wrap(function updateFormStaffSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(function () {\n            return updateFormStaff(action.payload).then(function (res) {\n              if ((res === null || res === void 0 ? void 0 : res.data.code) === 200) {\n                toast.success('Lưu thành công');\n                action.BtnSendLeader(true);\n                return res === null || res === void 0 ? void 0 : res.data;\n              } else {\n                toast.error(res === null || res === void 0 ? void 0 : res.data.message);\n              }\n            });\n          });\n\n        case 3:\n          data = _context2.sent;\n          _context2.next = 6;\n          return put(updateFormStaffSuccess(data));\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('err', _context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction createStaffSaga() {\n  return _regeneratorRuntime.wrap(function createStaffSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest('DELETE_STAFF', deleteStaffSaga);\n\n        case 2:\n          _context3.next = 4;\n          return takeLatest('UPDATE_FORM_STAFF', updateFormStaffSaga);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default createStaffSaga;","map":{"version":3,"sources":["D:/DATA/QL_NV/QLNV/src/app/redux/sagas/CreateStaffSaga.js"],"names":["deleteStaffSaga","updateFormStaffSaga","createStaffSaga","call","put","takeLatest","toast","deleteStaff","updateFormStaff","deleteStaffSuccess","updateFormStaffSuccess","configure","autoClose","draggable","limit","closeOnClick","action","payload","then","res","data","code","success","error","message","console","BtnSendLeader"],"mappings":";;oDAaUA,e;qDAkBAC,mB;qDAmBAC,e;;AAlDV,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,0CAA7C;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,QAA2D,8BAA3D;AAEAJ,KAAK,CAACK,SAAN,CAAgB;AACZC,EAAAA,SAAS,EAAE,IADC;AAEZC,EAAAA,SAAS,EAAE,KAFC;AAGZC,EAAAA,KAAK,EAAE,CAHK;AAIZC,EAAAA,YAAY,EAAE;AAJF,CAAhB;;AAOA,SAAUf,eAAV,CAA0BgB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMb,IAAI,CAAC;AAAA,mBACpBI,WAAW,CAACS,MAAM,CAACC,OAAR,CAAX,CAA4BC,IAA5B,CAAiC,UAACC,GAAD,EAAS;AACtC,kBAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,IAAL,CAAUC,IAAV,MAAmB,GAAvB,EAA4B;AACxBf,gBAAAA,KAAK,CAACgB,OAAN,CAAc,gBAAd;AACA,uBAAOH,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEC,IAAZ;AACH,eAHD,MAGO;AACHd,gBAAAA,KAAK,CAACiB,KAAN,CAAYJ,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAEC,IAAL,CAAUI,OAAtB;AACH;AACJ,aAPD,CADoB;AAAA,WAAD,CAAV;;AAFrB;AAEcJ,UAAAA,IAFd;AAAA;AAYQ,iBAAMhB,GAAG,CAACK,kBAAkB,CAACW,IAAD,CAAnB,CAAT;;AAZR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcQK,UAAAA,OAAO,CAACF,KAAR,CAAc,KAAd;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAUtB,mBAAV,CAA8Be,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMb,IAAI,CAAC;AAAA,mBACpBK,eAAe,CAACQ,MAAM,CAACC,OAAR,CAAf,CAAgCC,IAAhC,CAAqC,UAACC,GAAD,EAAS;AAC1C,kBAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,IAAL,CAAUC,IAAV,MAAmB,GAAvB,EAA4B;AACxBf,gBAAAA,KAAK,CAACgB,OAAN,CAAc,gBAAd;AACAN,gBAAAA,MAAM,CAACU,aAAP,CAAqB,IAArB;AACA,uBAAOP,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEC,IAAZ;AACH,eAJD,MAIO;AACHd,gBAAAA,KAAK,CAACiB,KAAN,CAAYJ,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAEC,IAAL,CAAUI,OAAtB;AACH;AACJ,aARD,CADoB;AAAA,WAAD,CAAV;;AAFrB;AAEcJ,UAAAA,IAFd;AAAA;AAaQ,iBAAMhB,GAAG,CAACM,sBAAsB,CAACU,IAAD,CAAvB,CAAT;;AAbR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeQK,UAAAA,OAAO,CAACF,KAAR,CAAc,KAAd;;AAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAUrB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,UAAU,CAAC,cAAD,EAAiBL,eAAjB,CAAhB;;AADJ;AAAA;AAEI,iBAAMK,UAAU,CAAC,mBAAD,EAAsBJ,mBAAtB,CAAhB;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,eAAf","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { deleteStaff, updateFormStaff } from 'app/views/CreateStaff/CreateStaffService';\r\nimport { deleteStaffSuccess, updateFormStaffSuccess } from '../actions/CreateStaffAction';\r\n\r\ntoast.configure({\r\n    autoClose: 2000,\r\n    draggable: false,\r\n    limit: 3,\r\n    closeOnClick: true,\r\n});\r\n\r\nfunction* deleteStaffSaga(action) {\r\n    try {\r\n        const data = yield call(() =>\r\n            deleteStaff(action.payload).then((res) => {\r\n                if (res?.data.code === 200) {\r\n                    toast.success('Xóa thành công');\r\n                    return res?.data;\r\n                } else {\r\n                    toast.error(res?.data.message);\r\n                }\r\n            }),\r\n        );\r\n        yield put(deleteStaffSuccess(data));\r\n    } catch (error) {\r\n        console.error('err', error);\r\n    }\r\n}\r\n\r\nfunction* updateFormStaffSaga(action) {\r\n    try {\r\n        const data = yield call(() =>\r\n            updateFormStaff(action.payload).then((res) => {\r\n                if (res?.data.code === 200) {\r\n                    toast.success('Lưu thành công');\r\n                    action.BtnSendLeader(true);\r\n                    return res?.data;\r\n                } else {\r\n                    toast.error(res?.data.message);\r\n                }\r\n            }),\r\n        );\r\n        yield put(updateFormStaffSuccess(data));\r\n    } catch (error) {\r\n        console.error('err', error);\r\n    }\r\n}\r\n\r\nfunction* createStaffSaga() {\r\n    yield takeLatest('DELETE_STAFF', deleteStaffSaga);\r\n    yield takeLatest('UPDATE_FORM_STAFF', updateFormStaffSaga);\r\n}\r\n\r\nexport default createStaffSaga;\r\n"]},"metadata":{},"sourceType":"module"}