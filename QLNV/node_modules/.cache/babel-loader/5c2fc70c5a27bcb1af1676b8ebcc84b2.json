{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\src\\\\app\\\\views\\\\GeneralSettings\\\\ModalSendLeader.js\";\n\nimport { Button, Col, Form, Input, Modal, Row, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { sendLeader } from 'app/redux/actions/CreateStaffAction';\nvar TextArea = Input.TextArea;\n\nvar ModalSendLeader = function ModalSendLeader(_ref) {\n  var open = _ref.open,\n      status = _ref.status,\n      employeeId = _ref.employeeId,\n      onCancel = _ref.onCancel,\n      onClose = _ref.onClose;\n\n  var _useState = useState('Giam doc'),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var handleSubmitRegister = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _objectSpread(_objectSpread({\n                employeeId: employeeId\n              }, value), {}, {\n                registerPosition: position,\n                status: status\n              });\n              dispatch(sendLeader(data, onClose));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmitRegister(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(value) {\n    switch (value) {\n      case 1:\n        {\n          setPosition('Giám Đốc');\n          break;\n        }\n\n      case 2:\n        {\n          setPosition('Phó Giám Đốc');\n          break;\n        }\n\n      case 3:\n        {\n          setPosition('Quan Lý');\n          break;\n        }\n\n      case 4:\n        {\n          setPosition('Trưởng Phòng');\n          break;\n        }\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"Tr\\xECnh l\\xE3nh \\u0111\\u1EA1o\",\n    centered: true,\n    open: open,\n    width: 700,\n    onCancel: onCancel,\n    footer: null,\n    className: \"modal-sendleader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: handleSubmitRegister,\n    layout: \"vertical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"form-sendleader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Ng\\xE0y tr\\xECnh\",\n    name: \"registerDate\",\n    rules: [{\n      required: true,\n      message: 'Bắt buộc phải nhập trường này!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"T\\xEAn l\\xE3nh \\u0111\\u1EA1o\",\n    name: \"registerName\",\n    className: \"list__leader-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"Jame\",\n    onChange: handleChange,\n    options: [{\n      value: 1,\n      label: 'Jack'\n    }, {\n      value: 2,\n      label: 'Lucy'\n    }, {\n      value: 3,\n      label: 'yiminghe'\n    }, {\n      value: 4,\n      label: 'Jame'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    className: \"leader-position\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Ch\\u1EE9c v\\u1EE5\",\n    name: \"registerPosition\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, position))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"N\\u1ED9i dung tr\\xECnh l\\xE3nh \\u0111\\u1EA1o\",\n    name: \"registerContent\",\n    rules: [{\n      required: true,\n      message: 'Bắt buộc phải nhập trường này!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: {\n      minRows: 3,\n      maxRows: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-end-position\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-register\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"TR\\xCCNH L\\xC3NH \\u0110\\u1EA0O\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-close\",\n    onClick: onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"H\\u1EE6Y\"))));\n};\n\nexport default ModalSendLeader;","map":{"version":3,"sources":["D:/DATA/QL_NV/QLNV/src/app/views/GeneralSettings/ModalSendLeader.js"],"names":["Button","Col","Form","Input","Modal","Row","Select","React","useState","useDispatch","sendLeader","TextArea","ModalSendLeader","open","status","employeeId","onCancel","onClose","position","setPosition","dispatch","useForm","form","handleSubmitRegister","value","data","registerPosition","handleChange","required","message","label","minRows","maxRows"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Input, Modal, Row, Select } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendLeader } from 'app/redux/actions/CreateStaffAction';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst ModalSendLeader = ({ open, status, employeeId, onCancel, onClose }) => {\r\n    const [position, setPosition] = useState('Giam doc');\r\n\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n\r\n    const handleSubmitRegister = async (value) => {\r\n        const data = {\r\n            employeeId,\r\n            ...value,\r\n            registerPosition: position,\r\n            status,\r\n        };\r\n\r\n        dispatch(sendLeader(data, onClose));\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        switch (value) {\r\n            case 1: {\r\n                setPosition('Giám Đốc');\r\n                break;\r\n            }\r\n            case 2: {\r\n                setPosition('Phó Giám Đốc');\r\n                break;\r\n            }\r\n            case 3: {\r\n                setPosition('Quan Lý');\r\n                break;\r\n            }\r\n            case 4: {\r\n                setPosition('Trưởng Phòng');\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Trình lãnh đạo\"\r\n            centered\r\n            open={open}\r\n            width={700}\r\n            onCancel={onCancel}\r\n            footer={null}\r\n            className=\"modal-sendleader\"\r\n        >\r\n            <Form form={form} onFinish={handleSubmitRegister} layout=\"vertical\">\r\n                <Row className=\"form-sendleader\">\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            label=\"Ngày trình\"\r\n                            name=\"registerDate\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Bắt buộc phải nhập trường này!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input type=\"date\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Tên lãnh đạo\" name=\"registerName\" className=\"list__leader-name\">\r\n                            <Select\r\n                                defaultValue=\"Jame\"\r\n                                onChange={handleChange}\r\n                                options={[\r\n                                    {\r\n                                        value: 1,\r\n                                        label: 'Jack',\r\n                                    },\r\n                                    {\r\n                                        value: 2,\r\n                                        label: 'Lucy',\r\n                                    },\r\n                                    {\r\n                                        value: 3,\r\n                                        label: 'yiminghe',\r\n                                    },\r\n                                    {\r\n                                        value: 4,\r\n                                        label: 'Jame',\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8} className=\"leader-position\">\r\n                        <Form.Item label=\"Chức vụ\" name=\"registerPosition\">\r\n                            <p>{position}</p>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"Nội dung trình lãnh đạo\"\r\n                            name=\"registerContent\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Bắt buộc phải nhập trường này!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <TextArea\r\n                                autoSize={{\r\n                                    minRows: 3,\r\n                                    maxRows: 6,\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"btn-end-position\">\r\n                    <Button className=\"btn-register\" htmlType=\"submit\">\r\n                        TRÌNH LÃNH ĐẠO\r\n                    </Button>\r\n                    <Button className=\"btn-close\" onClick={onCancel}>\r\n                        HỦY\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalSendLeader;\r\n"]},"metadata":{},"sourceType":"module"}