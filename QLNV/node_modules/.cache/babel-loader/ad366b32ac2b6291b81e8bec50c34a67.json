{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\src\\\\app\\\\views\\\\UpdateHappenings\\\\Promoted\\\\PromotedCollapse.js\";\nimport { Form } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport PromotedModal from './PromotedModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPromoted, deletePromoted, getListPromoted, updatePromoted } from 'app/redux/actions/UpdateHappeningsActions';\nimport PromotedTable from './PromotedTable';\nimport PromotedForm from './PromotedForm';\nimport ModalDelete from 'app/views/GeneralSettings/ModalDelete';\nimport ModalSendLeader from 'app/views/GeneralSettings/ModalSendLeader';\n\nfunction PromotedCollapse(_ref) {\n  var formRef = _ref.formRef,\n      employeeInfo = _ref.employeeInfo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      promotedForm = _useState2[0],\n      setPromotedForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      promotionId = _useState4[0],\n      setPromotionId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalDelete = _useState6[0],\n      setModalDelete = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      promoteRecord = _useState8[0],\n      setPromoteRecord = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sendLeader = _useState10[0],\n      setSendLeader = _useState10[1];\n\n  var listPromoted = useSelector(function (state) {\n    return state.updateEmployee.PromotedList;\n  });\n  var PromotedRender = useSelector(function (state) {\n    return state.updateEmployee.PromotedRender;\n  });\n  var dispatch = useDispatch();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  useEffect(function () {\n    dispatch(getListPromoted(employeeInfo));\n  }, [PromotedRender]);\n\n  var handleChangePromoted = function handleChangePromoted(record) {\n    setPromoteRecord(record);\n    setPromotionId({\n      action: 'update',\n      id: record.promotionId\n    });\n    form.setFieldsValue({\n      newPosition: record === null || record === void 0 ? void 0 : record.newPosition,\n      oldPosition: record === null || record === void 0 ? void 0 : record.oldPosition,\n      count: record === null || record === void 0 ? void 0 : record.count,\n      reason: record === null || record === void 0 ? void 0 : record.reason,\n      note: record === null || record === void 0 ? void 0 : record.note,\n      date: moment(record === null || record === void 0 ? void 0 : record.date)\n    });\n  };\n\n  var submitFormPromoted = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var staffData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              staffData = _objectSpread(_objectSpread({\n                employeeId: employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employeeId\n              }, listPromoted), values);\n\n              if (!(promotionId === null || promotionId === void 0 ? void 0 : promotionId.id)) {\n                dispatch(addPromoted(staffData));\n                form.resetFields();\n                handleShowPromotedForm();\n              } else {\n                dispatch(updatePromoted(_objectSpread(_objectSpread({}, staffData), {}, {\n                  promotionId: promotionId === null || promotionId === void 0 ? void 0 : promotionId.id\n                })));\n                handleShowPromotedForm();\n                form.resetFields();\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitFormPromoted(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenModalDeletePromoted = function handleOpenModalDeletePromoted(id) {\n    setModalDelete(!modalDelete);\n    setPromotionId({\n      action: '',\n      id: id\n    });\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(deletePromoted(promotionId.id));\n              setModalDelete(!modalDelete);\n              form.resetFields();\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onReset = function onReset() {\n    form.resetFields();\n    setPromotionId(null);\n  };\n\n  var handleShowPromotedForm = function handleShowPromotedForm() {\n    setPromotedForm(!promotedForm);\n  };\n\n  var handleSendLeader = function handleSendLeader() {\n    setSendLeader(!sendLeader);\n  };\n\n  var handleClear = function handleClear() {\n    setPromotionId(null);\n    setPromotedForm(false);\n    setSendLeader(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-form-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PromotedForm, {\n    promotionId: promotionId,\n    submitFormPromoted: submitFormPromoted,\n    formRef: formRef,\n    form: form,\n    onReset: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PromotedTable, {\n    handleChangePromoted: handleChangePromoted,\n    handleOpenModalDeletePromoted: handleOpenModalDeletePromoted,\n    listPromoted: listPromoted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), promotedForm && /*#__PURE__*/React.createElement(PromotedModal, {\n    open: promotedForm,\n    onCancel: handleClear,\n    employeeInfo: employeeInfo,\n    promoteRecord: promoteRecord,\n    onSend: handleSendLeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), modalDelete && /*#__PURE__*/React.createElement(ModalDelete, {\n    open: modalDelete,\n    onCancel: handleOpenModalDeletePromoted,\n    onOk: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), sendLeader && /*#__PURE__*/React.createElement(ModalSendLeader, {\n    open: sendLeader,\n    onCancel: handleSendLeader,\n    employeeId: employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employeeId,\n    onClose: handleClear,\n    status: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default PromotedCollapse;","map":{"version":3,"sources":["D:/DATA/QL_NV/QLNV/src/app/views/UpdateHappenings/Promoted/PromotedCollapse.js"],"names":["Form","React","useEffect","useState","moment","PromotedModal","useDispatch","useSelector","addPromoted","deletePromoted","getListPromoted","updatePromoted","PromotedTable","PromotedForm","ModalDelete","ModalSendLeader","PromotedCollapse","formRef","employeeInfo","promotedForm","setPromotedForm","promotionId","setPromotionId","modalDelete","setModalDelete","promoteRecord","setPromoteRecord","sendLeader","setSendLeader","listPromoted","state","updateEmployee","PromotedList","PromotedRender","dispatch","useForm","form","handleChangePromoted","record","action","id","setFieldsValue","newPosition","oldPosition","count","reason","note","date","submitFormPromoted","values","staffData","employeeId","resetFields","handleShowPromotedForm","handleOpenModalDeletePromoted","handleDelete","onReset","handleSendLeader","handleClear"],"mappings":"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","sourcesContent":["import { Form } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport PromotedModal from './PromotedModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addPromoted,\r\n    deletePromoted,\r\n    getListPromoted,\r\n    updatePromoted,\r\n} from 'app/redux/actions/UpdateHappeningsActions';\r\nimport PromotedTable from './PromotedTable';\r\nimport PromotedForm from './PromotedForm';\r\nimport ModalDelete from 'app/views/GeneralSettings/ModalDelete';\r\nimport ModalSendLeader from 'app/views/GeneralSettings/ModalSendLeader';\r\n\r\nfunction PromotedCollapse({ formRef, employeeInfo }) {\r\n    const [promotedForm, setPromotedForm] = useState(false);\r\n    const [promotionId, setPromotionId] = useState(null);\r\n    const [modalDelete, setModalDelete] = useState(false);\r\n    const [promoteRecord, setPromoteRecord] = useState({});\r\n    const [sendLeader, setSendLeader] = useState(false);\r\n\r\n    const listPromoted = useSelector((state) => state.updateEmployee.PromotedList);\r\n    const PromotedRender = useSelector((state) => state.updateEmployee.PromotedRender);\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        dispatch(getListPromoted(employeeInfo));\r\n    }, [PromotedRender]);\r\n\r\n    const handleChangePromoted = (record) => {\r\n        setPromoteRecord(record);\r\n        setPromotionId({\r\n            action: 'update',\r\n            id: record.promotionId,\r\n        });\r\n\r\n        form.setFieldsValue({\r\n            newPosition: record?.newPosition,\r\n            oldPosition: record?.oldPosition,\r\n            count: record?.count,\r\n            reason: record?.reason,\r\n            note: record?.note,\r\n            date: moment(record?.date),\r\n        });\r\n    };\r\n\r\n    const submitFormPromoted = async (values) => {\r\n        const staffData = {\r\n            employeeId: employeeInfo?.employeeId,\r\n            ...listPromoted,\r\n            ...values,\r\n        };\r\n\r\n        if (!promotionId?.id) {\r\n            dispatch(addPromoted(staffData));\r\n            form.resetFields();\r\n            handleShowPromotedForm();\r\n        } else {\r\n            dispatch(updatePromoted({ ...staffData, promotionId: promotionId?.id }));\r\n            handleShowPromotedForm();\r\n            form.resetFields();\r\n        }\r\n    };\r\n\r\n    const handleOpenModalDeletePromoted = (id) => {\r\n        setModalDelete(!modalDelete);\r\n        setPromotionId({\r\n            action: '',\r\n            id,\r\n        });\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        dispatch(deletePromoted(promotionId.id));\r\n        setModalDelete(!modalDelete);\r\n        form.resetFields();\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n        setPromotionId(null);\r\n    };\r\n\r\n    const handleShowPromotedForm = () => {\r\n        setPromotedForm(!promotedForm);\r\n    };\r\n\r\n    const handleSendLeader = () => {\r\n        setSendLeader(!sendLeader);\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setPromotionId(null);\r\n        setPromotedForm(false);\r\n        setSendLeader(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"content-form-layout\">\r\n            <PromotedForm\r\n                promotionId={promotionId}\r\n                submitFormPromoted={submitFormPromoted}\r\n                formRef={formRef}\r\n                form={form}\r\n                onReset={onReset}\r\n            />\r\n\r\n            <PromotedTable\r\n                handleChangePromoted={handleChangePromoted}\r\n                handleOpenModalDeletePromoted={handleOpenModalDeletePromoted}\r\n                listPromoted={listPromoted}\r\n            />\r\n\r\n            {promotedForm && (\r\n                <PromotedModal\r\n                    open={promotedForm}\r\n                    onCancel={handleClear}\r\n                    employeeInfo={employeeInfo}\r\n                    promoteRecord={promoteRecord}\r\n                    onSend={handleSendLeader}\r\n                />\r\n            )}\r\n\r\n            {modalDelete && (\r\n                <ModalDelete open={modalDelete} onCancel={handleOpenModalDeletePromoted} onOk={handleDelete} />\r\n            )}\r\n\r\n            {sendLeader && (\r\n                <ModalSendLeader\r\n                    open={sendLeader}\r\n                    onCancel={handleSendLeader}\r\n                    employeeId={employeeInfo?.employeeId}\r\n                    onClose={handleClear}\r\n                    status={16}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PromotedCollapse;\r\n"]},"metadata":{},"sourceType":"module"}