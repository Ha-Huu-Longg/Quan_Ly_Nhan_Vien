{"ast":null,"code":"import _objectSpread from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DATA\\\\QL_NV\\\\QLNV\\\\src\\\\app\\\\views\\\\CreateStaff\\\\DialogStaff\\\\DialogRegister\\\\index.jsx\";\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Modal, Tabs } from 'antd';\nimport { useEffect } from \"react\";\nimport ModalSendLeader from \"app/views/GeneralSettings/ModalSendLeader\";\nimport FormDiploma from \"app/views/GeneralSettings/FormDiploma\";\nimport FormCurriculumVitae from \"app/views/GeneralSettings/FormCurriculumVitae\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateFormStaff } from \"app/redux/actions/CreateStaffAction\";\nimport FormProfile from \"app/views/GeneralSettings/FormProfile\";\nimport { formatDate } from \"app/views/GeneralSettings/constant\";\nvar TabPane = Tabs.TabPane;\n\nvar DialogRegister = function DialogRegister(_ref) {\n  var _dataForm$cv;\n\n  var open = _ref.open,\n      staffInfo = _ref.staffInfo,\n      employeeId = _ref.employeeId,\n      handleClose = _ref.handleClose,\n      handleCloseDialogRegister = _ref.handleCloseDialogRegister;\n  var dataForm = useSelector(function (state) {\n    return state.createStaff.dataForm;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      shouldBtnSendLeader = _useState2[0],\n      setShouldBtnSendLeader = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldOpenPopupSendLeader = _useState4[0],\n      setShouldOpenPopupSendLeader = _useState4[1];\n\n  var _useState5 = useState(dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$cv = dataForm.cv) === null || _dataForm$cv === void 0 ? void 0 : _dataForm$cv.workExperiences),\n      _useState6 = _slicedToArray(_useState5, 2),\n      workExperiencesList = _useState6[0],\n      setWorkExperiencesList = _useState6[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var _dataForm$cv2, _dataForm$cv3, _dataForm$cv4, _dataForm$resume, _dataForm$resume2, _dataForm$resume3, _dataForm$resume4, _dataForm$resume5, _dataForm$resume6, _dataForm$resume7;\n\n    form.setFieldsValue({\n      careerGoal: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$cv2 = dataForm.cv) === null || _dataForm$cv2 === void 0 ? void 0 : _dataForm$cv2.careerGoal,\n      skill: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$cv3 = dataForm.cv) === null || _dataForm$cv3 === void 0 ? void 0 : _dataForm$cv3.skill,\n      hobby: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$cv4 = dataForm.cv) === null || _dataForm$cv4 === void 0 ? void 0 : _dataForm$cv4.hobby,\n      commonName: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume = dataForm.resume) === null || _dataForm$resume === void 0 ? void 0 : _dataForm$resume.commonName,\n      currentAddress: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume2 = dataForm.resume) === null || _dataForm$resume2 === void 0 ? void 0 : _dataForm$resume2.currentAddress,\n      citizenIdIssuanceDate: (dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume3 = dataForm.resume) === null || _dataForm$resume3 === void 0 ? void 0 : _dataForm$resume3.citizenIdIssuanceDate) ? formatDate(dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume4 = dataForm.resume) === null || _dataForm$resume4 === void 0 ? void 0 : _dataForm$resume4.citizenIdIssuanceDate) : \"\",\n      citizenIdIssuingAuthority: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume5 = dataForm.resume) === null || _dataForm$resume5 === void 0 ? void 0 : _dataForm$resume5.citizenIdIssuingAuthority,\n      ethnicity: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume6 = dataForm.resume) === null || _dataForm$resume6 === void 0 ? void 0 : _dataForm$resume6.ethnicity,\n      religion: dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$resume7 = dataForm.resume) === null || _dataForm$resume7 === void 0 ? void 0 : _dataForm$resume7.religion\n    });\n  }, []);\n\n  var onChange = function onChange(key) {};\n\n  var openPopupSendLeader = function openPopupSendLeader() {\n    setShouldOpenPopupSendLeader(true);\n  };\n\n  var handleClosePopupSendLeader = function handleClosePopupSendLeader() {\n    setShouldOpenPopupSendLeader(false);\n  };\n\n  var handleSubmitStaffRegister = function handleSubmitStaffRegister(values) {\n    var staffData = {\n      employeeId: employeeId,\n      cv: {\n        careerGoal: values.careerGoal,\n        skill: values.skill,\n        hobby: values.hobby,\n        workExperiences: workExperiencesList.map(function (data, index) {\n          return _objectSpread(_objectSpread({}, data), {}, {\n            startDate: moment(data.startDate).format('YYYY-MM-DD'),\n            endDate: moment(data.endDate).format('YYYY-MM-DD')\n          });\n        })\n      },\n      resume: {\n        commonName: values.commonName,\n        currentAddress: values.currentAddress,\n        citizenIdIssuanceDate: moment(values.citizenIdIssuanceDate).format('YYYY-MM-DD'),\n        citizenIdIssuingAuthority: values.citizenIdIssuingAuthority,\n        ethnicity: values.ethnicity,\n        religion: values.religion\n      }\n    };\n    dispatch(updateFormStaff(staffData, setShouldBtnSendLeader));\n  };\n\n  var onClearModal = function onClearModal() {\n    handleClose();\n    handleCloseDialogRegister();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"Th\\xF4ng tin h\\u1ED3 s\\u01A1\",\n    centered: true,\n    open: open,\n    width: 1000,\n    onCancel: handleCloseDialogRegister,\n    footer: null,\n    className: \"modal-dialog-register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: handleSubmitStaffRegister,\n    layout: \"vertical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    className: \"tab-information\",\n    defaultActiveKey: \"1\",\n    tabPosition: \"left\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"H\\u1ED2 S\\u01A0\",\n    key: \"profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormProfile, {\n    employeeInfo: staffInfo === null || staffInfo === void 0 ? void 0 : staffInfo.employeeInfo,\n    workExperiencesList: workExperiencesList,\n    setWorkExperiencesList: setWorkExperiencesList,\n    profileInfo: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"S\\u01A0 Y\\u1EBEU L\\xDD L\\u1ECACH\",\n    key: \"vitae\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormCurriculumVitae, {\n    data: staffInfo === null || staffInfo === void 0 ? void 0 : staffInfo.employeeInfo,\n    familyRelations: staffInfo === null || staffInfo === void 0 ? void 0 : staffInfo.familyRelations,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"DANH S\\xC1CH V\\u0102N B\\u1EB0NG\",\n    key: \"diploma\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormDiploma, {\n    data: staffInfo === null || staffInfo === void 0 ? void 0 : staffInfo.certificates,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-dialog-register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-save\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"L\\u01AFU\"), shouldBtnSendLeader && /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-register\",\n    onClick: function onClick() {\n      return openPopupSendLeader();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  }, \"TR\\xCCNH L\\xC3NH \\u0110\\u1EA0O\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-close\",\n    onClick: handleCloseDialogRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"H\\u1EE6Y\")), shouldOpenPopupSendLeader && /*#__PURE__*/React.createElement(ModalSendLeader, {\n    open: shouldOpenPopupSendLeader,\n    employeeId: employeeId,\n    onCancel: handleClosePopupSendLeader,\n    onClose: onClearModal,\n    status: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default DialogRegister;","map":{"version":3,"sources":["D:/DATA/QL_NV/QLNV/src/app/views/CreateStaff/DialogStaff/DialogRegister/index.jsx"],"names":["React","useState","Button","Form","Modal","Tabs","useEffect","ModalSendLeader","FormDiploma","FormCurriculumVitae","moment","useDispatch","useSelector","updateFormStaff","FormProfile","formatDate","TabPane","DialogRegister","open","staffInfo","employeeId","handleClose","handleCloseDialogRegister","dataForm","state","createStaff","shouldBtnSendLeader","setShouldBtnSendLeader","shouldOpenPopupSendLeader","setShouldOpenPopupSendLeader","cv","workExperiences","workExperiencesList","setWorkExperiencesList","useForm","form","dispatch","setFieldsValue","careerGoal","skill","hobby","commonName","resume","currentAddress","citizenIdIssuanceDate","citizenIdIssuingAuthority","ethnicity","religion","onChange","key","openPopupSendLeader","handleClosePopupSendLeader","handleSubmitStaffRegister","values","staffData","map","data","index","startDate","format","endDate","onClearModal","employeeInfo","familyRelations","certificates"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Modal, Tabs } from 'antd';\r\nimport { useEffect } from \"react\";\r\nimport ModalSendLeader from \"app/views/GeneralSettings/ModalSendLeader\";\r\nimport FormDiploma from \"app/views/GeneralSettings/FormDiploma\";\r\nimport FormCurriculumVitae from \"app/views/GeneralSettings/FormCurriculumVitae\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateFormStaff } from \"app/redux/actions/CreateStaffAction\";\r\nimport FormProfile from \"app/views/GeneralSettings/FormProfile\";\r\nimport { formatDate } from \"app/views/GeneralSettings/constant\";\r\n\r\nconst TabPane = Tabs.TabPane\r\n\r\nconst DialogRegister = ({ open, staffInfo, employeeId, handleClose, handleCloseDialogRegister }) => {\r\n    const dataForm = useSelector((state) => state.createStaff.dataForm)\r\n    const [shouldBtnSendLeader, setShouldBtnSendLeader] = useState(false)\r\n    const [shouldOpenPopupSendLeader, setShouldOpenPopupSendLeader] = useState(false)\r\n    const [workExperiencesList, setWorkExperiencesList] = useState(dataForm?.cv?.workExperiences)\r\n\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            careerGoal: dataForm?.cv?.careerGoal,\r\n            skill: dataForm?.cv?.skill,\r\n            hobby: dataForm?.cv?.hobby,\r\n            commonName: dataForm?.resume?.commonName,\r\n            currentAddress: dataForm?.resume?.currentAddress,\r\n            citizenIdIssuanceDate: dataForm?.resume?.citizenIdIssuanceDate ? formatDate(dataForm?.resume?.citizenIdIssuanceDate) : \"\",\r\n            citizenIdIssuingAuthority: dataForm?.resume?.citizenIdIssuingAuthority,\r\n            ethnicity: dataForm?.resume?.ethnicity,\r\n            religion: dataForm?.resume?.religion,\r\n        });\r\n    }, [])\r\n\r\n\r\n    const onChange = (key) => { };\r\n\r\n    const openPopupSendLeader = () => {\r\n        setShouldOpenPopupSendLeader(true)\r\n    }\r\n\r\n    const handleClosePopupSendLeader = () => {\r\n        setShouldOpenPopupSendLeader(false)\r\n    }\r\n\r\n    const handleSubmitStaffRegister = (values) => {\r\n        const staffData = {\r\n            employeeId,\r\n            cv: {\r\n                careerGoal: values.careerGoal,\r\n                skill: values.skill,\r\n                hobby: values.hobby,\r\n                workExperiences: workExperiencesList.map((data, index) => {\r\n                    return {\r\n                        ...data,\r\n                        startDate: moment(data.startDate).format('YYYY-MM-DD'),\r\n                        endDate: moment(data.endDate).format('YYYY-MM-DD'),\r\n                    }\r\n                })\r\n\r\n            },\r\n            resume: {\r\n                commonName: values.commonName,\r\n                currentAddress: values.currentAddress,\r\n                citizenIdIssuanceDate: moment(values.citizenIdIssuanceDate).format('YYYY-MM-DD'),\r\n                citizenIdIssuingAuthority: values.citizenIdIssuingAuthority,\r\n                ethnicity: values.ethnicity,\r\n                religion: values.religion,\r\n            },\r\n        }\r\n\r\n        dispatch(updateFormStaff(staffData, setShouldBtnSendLeader))\r\n    };\r\n\r\n    const onClearModal = () => {\r\n        handleClose()\r\n        handleCloseDialogRegister()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Thông tin hồ sơ\"\r\n            centered\r\n            open={open}\r\n            width={1000}\r\n            onCancel={handleCloseDialogRegister}\r\n            footer={null}\r\n            className=\"modal-dialog-register\"\r\n        >\r\n            <Form\r\n                form={form}\r\n                onFinish={handleSubmitStaffRegister}\r\n                layout=\"vertical\"\r\n            >\r\n                <Tabs className=\"tab-information\" defaultActiveKey=\"1\" tabPosition=\"left\" onChange={onChange}>\r\n                    <TabPane tab=\"HỒ SƠ\" key=\"profile\">\r\n                        <FormProfile\r\n                            employeeInfo={staffInfo?.employeeInfo}\r\n                            workExperiencesList={workExperiencesList}\r\n                            setWorkExperiencesList={setWorkExperiencesList}\r\n                            profileInfo\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tab=\"SƠ YẾU LÝ LỊCH\" key=\"vitae\">\r\n                        <FormCurriculumVitae\r\n                            data={staffInfo?.employeeInfo}\r\n                            familyRelations={staffInfo?.familyRelations}\r\n                            disabled={false}\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tab=\"DANH SÁCH VĂN BẰNG\" key=\"diploma\">\r\n                        <FormDiploma data={staffInfo?.certificates} />\r\n                    </TabPane>\r\n                </Tabs>\r\n                <div className=\"btn-dialog-register\">\r\n                    <Button className=\"btn-save\" htmlType=\"submit\">\r\n                        LƯU\r\n                    </Button>\r\n                    {shouldBtnSendLeader && <Button className=\"btn-register\" onClick={() => openPopupSendLeader()} >\r\n                        TRÌNH LÃNH ĐẠO\r\n                    </Button>}\r\n                    <Button className=\"btn-close\" onClick={handleCloseDialogRegister}>\r\n                        HỦY\r\n                    </Button>\r\n                </div>\r\n\r\n                {shouldOpenPopupSendLeader && (\r\n                    <ModalSendLeader\r\n                        open={shouldOpenPopupSendLeader}\r\n                        employeeId={employeeId}\r\n                        onCancel={handleClosePopupSendLeader}\r\n                        onClose={onClearModal}\r\n                        status={3}\r\n                    />\r\n                )}\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DialogRegister;"]},"metadata":{},"sourceType":"module"}